// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_gachaprobability is a generated GoMock package.
package mock_gachaprobability

import (
	gachaprobability "20dojo-online/pkg/server/domain/model/gachaprobability"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGachaProbRepository is a mock of GachaProbRepository interface
type MockGachaProbRepository struct {
	ctrl     *gomock.Controller
	recorder *MockGachaProbRepositoryMockRecorder
}

// MockGachaProbRepositoryMockRecorder is the mock recorder for MockGachaProbRepository
type MockGachaProbRepositoryMockRecorder struct {
	mock *MockGachaProbRepository
}

// NewMockGachaProbRepository creates a new mock instance
func NewMockGachaProbRepository(ctrl *gomock.Controller) *MockGachaProbRepository {
	mock := &MockGachaProbRepository{ctrl: ctrl}
	mock.recorder = &MockGachaProbRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGachaProbRepository) EXPECT() *MockGachaProbRepositoryMockRecorder {
	return m.recorder
}

// SelectAllGachaProb mocks base method
func (m *MockGachaProbRepository) SelectAllGachaProb() ([]*gachaprobability.GachaProb, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectAllGachaProb")
	ret0, _ := ret[0].([]*gachaprobability.GachaProb)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectAllGachaProb indicates an expected call of SelectAllGachaProb
func (mr *MockGachaProbRepositoryMockRecorder) SelectAllGachaProb() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectAllGachaProb", reflect.TypeOf((*MockGachaProbRepository)(nil).SelectAllGachaProb))
}
