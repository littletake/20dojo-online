// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_gachaprobability is a generated GoMock package.
package mock_gachaprobability

import (
	gachaprobability "20dojo-online/pkg/server/domain/model/gachaprobability"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGachaProbRepo is a mock of GachaProbRepo interface
type MockGachaProbRepo struct {
	ctrl     *gomock.Controller
	recorder *MockGachaProbRepoMockRecorder
}

// MockGachaProbRepoMockRecorder is the mock recorder for MockGachaProbRepo
type MockGachaProbRepoMockRecorder struct {
	mock *MockGachaProbRepo
}

// NewMockGachaProbRepo creates a new mock instance
func NewMockGachaProbRepo(ctrl *gomock.Controller) *MockGachaProbRepo {
	mock := &MockGachaProbRepo{ctrl: ctrl}
	mock.recorder = &MockGachaProbRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGachaProbRepo) EXPECT() *MockGachaProbRepoMockRecorder {
	return m.recorder
}

// SelectAllGachaProb mocks base method
func (m *MockGachaProbRepo) SelectAllGachaProb() ([]*gachaprobability.GachaProb, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectAllGachaProb")
	ret0, _ := ret[0].([]*gachaprobability.GachaProb)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectAllGachaProb indicates an expected call of SelectAllGachaProb
func (mr *MockGachaProbRepoMockRecorder) SelectAllGachaProb() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectAllGachaProb", reflect.TypeOf((*MockGachaProbRepo)(nil).SelectAllGachaProb))
}
