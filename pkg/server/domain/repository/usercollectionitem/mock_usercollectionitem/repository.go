// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_usercollectionitem is a generated GoMock package.
package mock_usercollectionitem

import (
	usercollectionitem "20dojo-online/pkg/server/domain/model/usercollectionitem"
	sql "database/sql"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUCItemRepository is a mock of UCItemRepository interface
type MockUCItemRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUCItemRepositoryMockRecorder
}

// MockUCItemRepositoryMockRecorder is the mock recorder for MockUCItemRepository
type MockUCItemRepositoryMockRecorder struct {
	mock *MockUCItemRepository
}

// NewMockUCItemRepository creates a new mock instance
func NewMockUCItemRepository(ctrl *gomock.Controller) *MockUCItemRepository {
	mock := &MockUCItemRepository{ctrl: ctrl}
	mock.recorder = &MockUCItemRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUCItemRepository) EXPECT() *MockUCItemRepositoryMockRecorder {
	return m.recorder
}

// SelectUCItemSliceByUserID mocks base method
func (m *MockUCItemRepository) SelectUCItemSliceByUserID(userID string) ([]*usercollectionitem.UserCollectionItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectUCItemSliceByUserID", userID)
	ret0, _ := ret[0].([]*usercollectionitem.UserCollectionItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectUCItemSliceByUserID indicates an expected call of SelectUCItemSliceByUserID
func (mr *MockUCItemRepositoryMockRecorder) SelectUCItemSliceByUserID(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectUCItemSliceByUserID", reflect.TypeOf((*MockUCItemRepository)(nil).SelectUCItemSliceByUserID), userID)
}

// BulkInsertUCItemSlice mocks base method
func (m *MockUCItemRepository) BulkInsertUCItemSlice(arg0 []*usercollectionitem.UserCollectionItem, arg1 *sql.Tx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkInsertUCItemSlice", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkInsertUCItemSlice indicates an expected call of BulkInsertUCItemSlice
func (mr *MockUCItemRepositoryMockRecorder) BulkInsertUCItemSlice(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkInsertUCItemSlice", reflect.TypeOf((*MockUCItemRepository)(nil).BulkInsertUCItemSlice), arg0, arg1)
}
